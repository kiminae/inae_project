<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/app.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="${sqlmap.location}"></property>
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<constructor-arg index="0" ref="sqlSessionFactory"/>
	</bean>

	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="dataSourceSpied" />
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE" />
				<property name="sqlPrefix" value="SQL::: " />
			</bean>
		</property>
	</bean>

	
	<bean id="dataSourceSpied" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${oracle.driverClassName}" />
		<property name="url" value="${oracle.url}" />
		<property name="username" value="${oracle.username}" />
		<property name="password" value="${oracle.password}" />
		<property name="defaultAutoCommit" value="${oracle.defaultAutoCommit}" />
	</bean>
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!--  
		name : 트랜잭션이 적용될 메서드 이름을 명시하며 필수 속성이다. get*,delete*,* 설정이 가능하다.
		propagation : 트랜잭션 동작 설정하며 기본값 REQUIRED 이다.
		isolation : 트랜잭션의 격리 수준을 설정하며 기본값은 DEFAULT 이다.
		timeout : 트랜잭션 시간 초과 값을 설정하며 기본값은 -1 이다. 초단위로 입력한다.
		read-only : 읽기 전용 여부를 설정한다. 기본값은 false 이다.
		rollback-for : 롤백을 할 예외를 설정한다. 여러개를 입력할 경우 , 로 구분한다. 기본값은 RuntimeException 이다. Exception, com.syaku.MyException 설정이 가능하다.
		no-rollback-for : 롤백하지 않을 예외를 설정한다. 여러개를 입력할 경우 , 로 구분한다. Exception, com.syaku.MyException 설정이 가능하다.
	-->
	<!-- 
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="select*" read-only="true"/>
			<tx:method name="update*"/>
			<tx:method name="insert*"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="txPointcut" expression="execution(* com.spring.jylee..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
	</aop:config>
	 -->
	
	<!-- 트랜잭션 어노테이션 자동 검색 -->
	<tx:annotation-driven transaction-manager="txManager"/>

</beans>
